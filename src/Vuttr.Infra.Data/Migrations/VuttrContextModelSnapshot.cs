// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Vuttr.Infra.Data.Context;

namespace Vuttr.Infra.Data.Migrations
{
    [DbContext(typeof(VuttrContext))]
    partial class VuttrContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Vuttr.Domain.Entities.Ferramentas.Ferramenta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ferramenta_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("data_cadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnName("descricao")
                        .HasColumnType("varchar(400)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnName("link")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(240)");

                    b.HasKey("Id");

                    b.ToTable("ferramentas");
                });

            modelBuilder.Entity("Vuttr.Domain.Entities.FerramentasTags.FerramentaTag", b =>
                {
                    b.Property<Guid>("FerramentaId")
                        .HasColumnName("ferramenta_id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TagId")
                        .HasColumnName("tag_id")
                        .HasColumnType("uuid");

                    b.HasKey("FerramentaId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ferramentas_tags");
                });

            modelBuilder.Entity("Vuttr.Domain.Entities.Tags.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("tag_id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnName("data_cadastro")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnName("nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("tags");
                });

            modelBuilder.Entity("Vuttr.Domain.Entities.FerramentasTags.FerramentaTag", b =>
                {
                    b.HasOne("Vuttr.Domain.Entities.Ferramentas.Ferramenta", "Ferramenta")
                        .WithMany("FerramentaTags")
                        .HasForeignKey("FerramentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Vuttr.Domain.Entities.Tags.Tag", "Tag")
                        .WithMany("FerramentasTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
